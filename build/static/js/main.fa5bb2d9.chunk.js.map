{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/UI/Input/Input.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","hoc/Layout/Layout.module.css","assets/images/burger-logo.png","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css","components/Order/Order.module.css","containers/Auth/Auth.module.css","services/axios-orders.js","store/actions/auth.action.js","store/actions/actionTypes.js","hoc/Aux/Aux.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/burgerBuilder.action.js","store/actions/order.action.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","containers/Auth/Auth.js","containers/Auth/Logout/Logout.js","App.js","serviceWorker.js","services/utils.js","store/reducers/burgerBuilder.reducer.js","store/reducers/order.reducer.js","store/reducers/auth.reducer.js","index.js"],"names":["module","exports","instance","axios","create","baseURL","authSuccess","authData","type","userId","localId","idToken","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","setAuthRedirectPath","path","aux","props","children","logo","className","styles","Logo","src","BurgerLogo","alt","navigationItem","NavigationItem","to","link","exact","activeClassName","classes","active","navigationItems","NavigationItems","isAuthenticated","drawerToggle","onClick","clicked","DrawerToggle","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","join","isAuth","backdrop","show","Backdrop","onBackdropClicked","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","Aux","closed","Layout","state","showSideDrawer","sideDrawerClosedHandler","setState","sideDrawerToggleHandler","prevState","this","Content","Component","connect","auth","token","BurgerIngredient","ingredient","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Bacon","Salad","burger","transformedIngredients","ingredients","Object","keys","map","ingredientKey","Array","_","i","key","reduce","arr","el","concat","length","Burger","buildControl","BuildControl","Label","label","Less","removed","disabled","More","added","controls","buildControls","BuildControls","price","toFixed","control","ingredientAdded","ingredientRemoved","purchaseable","OrderButton","orderBurger","Modal","nextProps","nextState","modalClosed","style","transform","opacity","button","Button","btnType","OrderSummary","ingredientSummary","textTransform","totalPrice","purchaseCanceled","purchaseContinued","spinner","Loader","withErrorHandler","WrappedComponent","error","errorConfirmedHandler","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","console","log","eject","message","BurgerBuilder","purchasing","purchaseHandler","_isAuthenticated","onSetAuthRedirectPath","history","push","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","onInitIngredients","values","accumulator","currentValue","disabledInfo","_ingredients","orderSummary","_error","Spinner","onIngredientAdded","onIngredientRemoved","updatePurchaseState","_totalPrice","burgerBuilder","ingName","ingredientName","get","then","data","catch","e","actions","checkoutSummary","CheckoutSummary","width","margin","checkoutCancelled","checkoutContinued","input","inputElement","inputStyles","InputElement","invalid","shouldValidate","touched","Invalid","elementType","elementConfig","value","onChange","changed","options","option","displayValue","Input","ContactData","orderForm","name","placeholder","validation","required","valid","dirty","street","zip","country","email","deliveryMethod","isFormValid","loading","orderHandler","event","preventDefault","formData","formElementIdentifier","order","orderData","_userId","onOrderBurger","_authToken","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","checkValidity","rules","trim","formElementsArray","id","config","form","onSubmit","formElement","_loading","post","orderId","purchaseBurgerSuccess","Checkout","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","summary","purchasedRedirect","_purchased","match","component","purchased","amount","ingredientOutput","ig","display","border","padding","Order","Number","Orders","onFetchOrders","orders","_orders","queryParams","fetchedOrders","Auth","isEmail","password","minLength","isSignUp","controlName","updatedControls","onSubmitHandler","onAuth","switchAuthModeHandler","_buildingBurger","_authRedirectPath","onSetAuthRedirect","errorMessage","authRedirect","building","authRedirectPath","returnSecureToken","url","expirationDate","Date","getTime","expiresIn","setItem","authFailed","Logout","onLogout","App","onTryAutoSignup","routes","withRouter","getItem","time","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","updateObject","oldObject","updatedProperties","INGREDIENT_PRICES","salad","cheese","meat","bacon","initialState","addIngredient","action","updatedState","removeIngredient","setIngredients","fetchIngredientsFailed","reducer","purchaseInit","purcharseBurgerStart","purcharseBurgerSuccess","newOrder","purcharseBurgerFailed","fetchOrdersStart","fetchOrdersSuccess","fetchOrdersFail","authStart","authFail","authLogout","composeEnhancers","compose","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","process","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","URL","href","origin","addEventListener","fetch","headers","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.fa5bb2d9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__2US69\",\"BreadTop\":\"BurgerIngredient_BreadTop__3Y4-R\",\"Seeds1\":\"BurgerIngredient_Seeds1__J6vUJ\",\"Seeds2\":\"BurgerIngredient_Seeds2__2Ylex\",\"Meat\":\"BurgerIngredient_Meat__3flwI\",\"Cheese\":\"BurgerIngredient_Cheese__3rOTJ\",\"Salad\":\"BurgerIngredient_Salad__KLnhy\",\"Bacon\":\"BurgerIngredient_Bacon__1KK6n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__3kXLK\",\"Open\":\"SideDrawer_Open__1tCv1\",\"Close\":\"SideDrawer_Close__9j7x-\",\"Logo\":\"SideDrawer_Logo__3voUv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__ApScI\",\"Logo\":\"Toolbar_Logo__3Lk47\",\"DesktopOnly\":\"Toolbar_DesktopOnly__LuPaL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__O8649\",\"Label\":\"BuildControl_Label__TQkTk\",\"Less\":\"BuildControl_Less__3Ttg8\",\"More\":\"BuildControl_More__1MY7B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3r5Ke\",\"Label\":\"Input_Label__1qyHr\",\"Invalid\":\"Input_Invalid__16Mis\",\"InputElement\":\"Input_InputElement__2m88K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__2SpXc\",\"active\":\"NavigationItem_active__2v2td\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__1YmbS\",\"OrderButton\":\"BuildControls_OrderButton___M-Du\",\"enable\":\"BuildControls_enable__9xLsD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3gFiX\",\"Success\":\"Button_Success__2Rka1\",\"Danger\":\"Button_Danger__2ogZq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__3H3X8\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1N0xH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__1fnFX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__m405X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3j6VK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__10T8F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1-5dN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__1twK-\",\"load6\":\"Spinner_load6__1_74m\",\"round\":\"Spinner_round__3G_CY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__3PsXi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__20AK_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3kYZJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__1Zul_\"};","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://burger-builder-73b04.firebaseio.com/'\n});\n\nexport default instance;\n","import * as actionTypes from 'store/actions/actionTypes';\nimport axios from 'axios';\n\nexport const authStart = () => ({\n  type: actionTypes.AUTH_START\n});\n\nexport const authSuccess = authData => ({\n  type: actionTypes.AUTH_SUCCESS,\n  userId: authData.localId,\n  idToken: authData.idToken\n});\n\nexport const authFailed = error => ({\n  type: actionTypes.AUTH_FAIL,\n  error\n});\n\nexport const logout = () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('expirationDate');\n  localStorage.removeItem('userId');\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\n\nexport const checkAuthTimeout = expirationTime => dispatch => {\n  setTimeout(() => {\n    dispatch(logout());\n  }, expirationTime * 1000);\n};\n\nexport const auth = (email, password, isSignUp) => dispatch => {\n  dispatch(authStart());\n  const authData = {\n    email,\n    password,\n    returnSecureToken: true\n  };\n  let url = isSignUp\n    ? 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyD3S7OExrum4e4m4mFZoZLClIAiC5kix_0'\n    : 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyD3S7OExrum4e4m4mFZoZLClIAiC5kix_0';\n\n  axios\n    .post(url, authData)\n    .then(response => {\n      const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000);\n      localStorage.setItem('token', response.data.idToken);\n      localStorage.setItem('expiration', expirationDate);\n      localStorage.setItem('userId', response.data.localId);\n      dispatch(authSuccess(response.data));\n      checkAuthTimeout(authSuccess(response.data.expiresIn));\n    })\n    .catch(error => {\n      console.log(error.response);\n      dispatch(authFailed(error.response.data.error));\n    });\n};\n\nexport const setAuthRedirectPath = path => ({\n  type: actionTypes.SET_AUTH_REDIRECT_PATH,\n  path\n});\n\nexport const authCheckState = () => dispatch => {\n  const token = localStorage.getItem('token');\n\n  if (!token) {\n    dispatch(logout());\n  } else {\n    const expirationDate = new Date(localStorage.getItem('expiration'));\n    if (expirationDate <= new Date()) {\n      dispatch(logout());\n    } else {\n      dispatch(authSuccess(token, localStorage.getItem('userId')));\n      let time = (expirationDate.getTime() - new Date().getTime()) / 1000;\n      dispatch(checkAuthTimeout(time));\n    }\n  }\n};\n","export const ADD_INGREDIENT = 'ADD_INGREDIENTS';\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENTS';\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\n\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\nexport const PURCHASE_BURGER_FAILED = 'PURCHASE_BURGER_FAILED';\nexport const PURCHASE_INIT = 'PURCHASE_INIT';\n\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';\n\nexport const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH';\n","const aux = props => props.children;\n\nexport default aux;\n","import React from 'react';\nimport BurgerLogo from 'assets/images/burger-logo.png';\nimport styles from './Logo.module.css';\n\nconst logo = props => (\n  <div className={styles.Logo}>\n    <img src={BurgerLogo} alt=\"Burger Builder\" />\n  </div>\n);\n\nexport default logo;\n","import React from 'react';\nimport styles from './NavigationItem.module.css';\nimport { NavLink } from 'react-router-dom';\nimport classes from './NavigationItem.module.css';\n\nconst navigationItem = props => (\n  <li className={styles.NavigationItem}>\n    <NavLink to={props.link} exact activeClassName={classes.active}>\n      {props.children}\n    </NavLink>\n  </li>\n);\n\nexport default navigationItem;\n","import React from 'react';\nimport styles from './NavigationItems.module.css';\nimport NavigationItem from './NavigationItem/NavigationItem';\n\nconst navigationItems = props => (\n  <ul className={styles.NavigationItems}>\n    <NavigationItem link=\"/\">Burger Builder</NavigationItem>\n    {props.isAuthenticated ? <NavigationItem link=\"/orders\">Orders</NavigationItem> : null}\n    {!props.isAuthenticated ? (\n      <NavigationItem link=\"/auth\">Login/Signup</NavigationItem>\n    ) : (\n      <NavigationItem link=\"/logout\">Logout</NavigationItem>\n    )}\n  </ul>\n);\n\nexport default navigationItems;\n","import React from 'react';\nimport styles from './DrawerToggle.module.css';\n\nconst drawerToggle = props => (\n  <div onClick={props.clicked} className={styles.DrawerToggle}>\n    <div></div>\n    <div></div>\n    <div></div>\n  </div>\n);\n\nexport default drawerToggle;\n","import React from 'react';\nimport styles from './Toolbar.module.css';\nimport Logo from 'components/Logo/Logo';\nimport NavigationItems from 'components/Navigation/NavigationItems/NavigationItems';\nimport DrawerToggle from 'components/Navigation/SideDrawer/DrawerToggle/DrawerToggle';\n\nconst toolbar = props => (\n  <header className={styles.Toolbar}>\n    <DrawerToggle clicked={props.drawerToggleClicked} />\n    <div className={[styles.Logo, styles.DesktopOnly].join(' ')}>\n      <Logo />\n    </div>\n    <nav className={styles.DesktopOnly}>\n      <NavigationItems isAuthenticated={props.isAuth} />\n    </nav>\n  </header>\n);\n\nexport default toolbar;\n","import React from 'react';\nimport styles from './Backdrop.module.css';\n\nconst backdrop = props =>\n  props.show ? <div className={styles.Backdrop} onClick={props.onBackdropClicked}></div> : null;\n\nexport default backdrop;\n","import React from 'react';\nimport Logo from 'components/Logo/Logo';\nimport NavigationItems from 'components/Navigation/NavigationItems/NavigationItems';\nimport styles from './SideDrawer.module.css';\nimport Backdrop from 'components/UI/Backdrop/Backdrop';\nimport Aux from 'hoc/Aux/Aux';\n\nconst sideDrawer = props => {\n  let attachedClasses = [styles.SideDrawer, styles.Close];\n\n  if (props.open) {\n    attachedClasses = [styles.SideDrawer, styles.Open];\n  }\n\n  return (\n    <Aux>\n      <Backdrop show={props.open} onBackdropClicked={props.closed} />\n      <div className={attachedClasses.join(' ')}>\n        <div className={styles.Logo}>\n          <Logo />\n        </div>\n        <nav onClick={props.closed}>\n          <NavigationItems isAuthenticated={props.isAuth} />\n        </nav>\n      </div>\n    </Aux>\n  );\n};\n\nexport default sideDrawer;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Aux from 'hoc/Aux/Aux';\nimport styles from './Layout.module.css';\nimport Toolbar from 'components/Navigation/Toolbar/Toolbar';\nimport SideDrawer from 'components/Navigation/SideDrawer/SideDrawer';\n\nclass Layout extends Component {\n  state = {\n    showSideDrawer: false\n  };\n\n  sideDrawerClosedHandler = () => {\n    this.setState({ showSideDrawer: false });\n  };\n\n  sideDrawerToggleHandler = () => {\n    this.setState(prevState => {\n      return { showSideDrawer: !prevState.showSideDrawer };\n    });\n  };\n\n  render() {\n    return (\n      <Aux>\n        <Toolbar isAuth={this.props.isAuthenticated} drawerToggleClicked={this.sideDrawerToggleHandler} />\n        <SideDrawer\n          isAuth={this.props.isAuthenticated}\n          open={this.state.showSideDrawer}\n          closed={this.sideDrawerClosedHandler}\n        />\n        <main className={styles.Content}>{this.props.children}</main>\n      </Aux>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.token !== null\n});\n\nexport default connect(mapStateToProps)(Layout);\n","import React, { Component } from 'react';\nimport styles from './BurgerIngredient.module.css';\nimport PropTypes from 'prop-types';\n\nclass BurgerIngredient extends Component {\n  render() {\n    let ingredient = null;\n\n    switch (this.props.type) {\n      case 'bread-bottom':\n        ingredient = <div className={styles.BreadBottom}></div>;\n        break;\n      case 'bread-top':\n        ingredient = (\n          <div className={styles.BreadTop}>\n            <div className={styles.Seeds1}></div>\n            <div className={styles.Seeds2}></div>\n          </div>\n        );\n        break;\n      case 'meat':\n        ingredient = <div className={styles.Meat}></div>;\n        break;\n      case 'cheese':\n        ingredient = <div className={styles.Cheese}></div>;\n        break;\n      case 'bacon':\n        ingredient = <div className={styles.Bacon}></div>;\n        break;\n      case 'salad':\n        ingredient = <div className={styles.Salad}></div>;\n        break;\n      default:\n        ingredient = null;\n    }\n\n    return ingredient;\n  }\n}\n\nBurgerIngredient.propTypes = {\n  type: PropTypes.string.isRequired\n};\n\nexport default BurgerIngredient;\n","import React from 'react';\nimport styles from './Burger.module.css';\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\n\nconst burger = props => {\n  let transformedIngredients;\n  if (props.ingredients) {\n    transformedIngredients = Object.keys(props.ingredients)\n      .map(ingredientKey => {\n        return [...Array(props.ingredients[ingredientKey])].map((_, i) => {\n          return <BurgerIngredient key={ingredientKey + i} type={ingredientKey} />;\n        });\n      })\n      .reduce((arr, el) => {\n        return arr.concat(el);\n      }, []);\n    if (transformedIngredients.length === 0) {\n      transformedIngredients = <p>Please start adding ingredients</p>;\n    }\n  }\n  return (\n    <div className={styles.Burger}>\n      <BurgerIngredient type=\"bread-top\"></BurgerIngredient>\n      {props.ingredients ? transformedIngredients : null}\n      <BurgerIngredient type=\"bread-bottom\"></BurgerIngredient>\n    </div>\n  );\n};\n\nexport default burger;\n","import React from 'react';\nimport styles from './BuildControl.module.css';\n\nconst buildControl = props => (\n  <div className={styles.BuildControl}>\n    <div className={styles.Label}>{props.label}</div>\n    <button className={styles.Less} onClick={props.removed} disabled={props.disabled}>\n      Less\n    </button>\n    <button className={styles.More} onClick={props.added}>\n      More\n    </button>\n  </div>\n);\n\nexport default buildControl;\n","import React from 'react';\nimport styles from './BuildControls.module.css';\nimport BuildControl from './BuildControl/BuildControl';\n\nconst controls = [\n  { label: 'Salad', type: 'salad' },\n  { label: 'Bacon', type: 'bacon' },\n  { label: 'Cheese', type: 'cheese' },\n  { label: 'Meat', type: 'meat' }\n];\n\nconst buildControls = props => (\n  <div className={styles.BuildControls}>\n    <p>\n      Current Price: <strong>{props.price.toFixed(2)}</strong>\n    </p>\n    {controls.map(control => (\n      <BuildControl\n        key={control.label}\n        label={control.label}\n        type={control.type}\n        added={() => props.ingredientAdded(control.type)}\n        removed={() => props.ingredientRemoved(control.type)}\n        disabled={props.disabled[control.type]}\n      />\n    ))}\n    <button disabled={!props.purchaseable} className={styles.OrderButton} onClick={props.orderBurger}>\n      {props.isAuth ? 'Order now' : 'Login to order'}\n    </button>\n  </div>\n);\n\nexport default buildControls;\n","import React, { Component } from 'react';\nimport styles from './Modal.module.css';\nimport Aux from 'hoc/Aux/Aux';\nimport Backdrop from 'components/UI/Backdrop/Backdrop';\n\nclass Modal extends Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\n  }\n\n  render() {\n    return (\n      <Aux>\n        <Backdrop show={this.props.show} onBackdropClicked={this.props.modalClosed} />\n        <div\n          className={styles.Modal}\n          style={{\n            transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\n            opacity: this.props.show ? 1 : 0\n          }}\n        >\n          {this.props.children}\n        </div>\n      </Aux>\n    );\n  }\n}\n\nexport default Modal;\n","import React from 'react';\nimport styles from './Button.module.css';\n\nconst button = props => (\n  <button\n    className={[styles.Button, styles[props.btnType]].join(' ')}\n    disabled={props.disabled}\n    onClick={props.clicked}\n  >\n    {props.children}\n  </button>\n);\n\nexport default button;\n","import React, { Component } from 'react';\nimport Aux from 'hoc/Aux/Aux';\nimport Button from 'components/UI/Button/Button';\n\nclass OrderSummary extends Component {\n  render() {\n    const ingredientSummary = Object.keys(this.props.ingredients).map(ingredientKey => {\n      return (\n        <li key={ingredientKey}>\n          <span style={{ textTransform: 'capitalize' }}>{ingredientKey}</span>: {this.props.ingredients[ingredientKey]}\n        </li>\n      );\n    });\n\n    return (\n      <Aux>\n        <h3>Your Order</h3>\n        <p>A delicious burger with the following ingredients:</p>\n        <ul>{ingredientSummary}</ul>\n        <p>\n          <strong>Total Price: {this.props.totalPrice.toFixed(2)}</strong>\n        </p>\n        <p>Continue to Checkout?</p>\n        <Button btnType=\"Danger\" clicked={this.props.purchaseCanceled}>\n          CANCEL\n        </Button>\n        <Button btnType=\"Success\" clicked={this.props.purchaseContinued}>\n          CONTINUE\n        </Button>\n      </Aux>\n    );\n  }\n}\n\nexport default OrderSummary;\n","import React from 'react';\nimport styles from './Spinner.module.css';\n\nconst spinner = () => <div className={styles.Loader}>Loading...</div>;\n\nexport default spinner;\n","import React, { Component } from 'react';\nimport Modal from 'components/UI/Modal/Modal';\nimport Aux from 'hoc/Aux/Aux';\n\nconst withErrorHandler = (WrappedComponent, axios) => {\n  return class extends Component {\n    state = {\n      error: null\n    };\n\n    constructor(props) {\n      super(props);\n      this.reqInterceptor = axios.interceptors.request.use(req => {\n        this.setState({ error: null });\n        return req;\n      });\n\n      this.resInterceptor = axios.interceptors.response.use(\n        res => res,\n        error => {\n          console.log(error);\n          this.setState({ error });\n        }\n      );\n    }\n\n    componentWillUnmount() {\n      axios.interceptors.request.eject(this.reqInterceptor);\n      axios.interceptors.response.eject(this.resInterceptor);\n    }\n\n    errorConfirmedHandler = () => {\n      this.setState({ error: null });\n    };\n\n    render() {\n      return (\n        <Aux>\n          <Modal show={this.state.error} modalClosed={this.errorConfirmedHandler}>\n            {this.state.error ? this.state.error.message : null}\n          </Modal>\n          <WrappedComponent {...this.props} />\n        </Aux>\n      );\n    }\n  };\n};\n\nexport default withErrorHandler;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Aux from 'hoc/Aux/Aux';\nimport Burger from 'components/Burger/Burger';\nimport BuildControls from 'components/Burger/BuildControls/BuildControls';\nimport Modal from 'components/UI/Modal/Modal';\nimport OrderSummary from 'components/Burger/OrderSummary/OrderSummary';\nimport axios from 'services/axios-orders';\nimport Spinner from 'components/UI/Spinner/Spinner';\nimport withErrorHandler from 'hoc/withErrorHandler/withErrorHandler';\nimport * as actions from 'store/actions/index.action';\n\nclass BurgerBuilder extends Component {\n  state = {\n    purchaseable: false,\n    purchasing: false\n  };\n\n  componentDidMount() {\n    this.props.onInitIngredients();\n  }\n\n  updatePurchaseState(ingredients) {\n    const sum = Object.values(ingredients).reduce((accumulator, currentValue) => accumulator + currentValue, 0);\n    return sum > 0;\n  }\n\n  purchaseHandler = () => {\n    if (this.props._isAuthenticated) {\n      this.setState({ purchasing: true });\n    } else {\n      this.props.onSetAuthRedirectPath('/checkout');\n      this.props.history.push('/auth');\n    }\n  };\n\n  purchaseCancelHandler = () => {\n    this.setState({ purchasing: false });\n  };\n\n  purchaseContinueHandler = () => {\n    // const queryParams = [];\n    // for (let i in this.props._ingredients) {\n    //   queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.props._ingredients[i]));\n    // }\n    // queryParams.push('price=' + this.props._totalPrice);\n    // const queryString = queryParams.join('&');\n    // this.props.history.push({ pathname: '/checkout', search: '?' + queryString });\n    this.props.onInitPurchase();\n    this.props.history.push('/checkout');\n  };\n\n  render() {\n    const disabledInfo = {\n      ...this.props._ingredients\n    };\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n    let orderSummary = null;\n\n    let burger = this.props._error ? <p>Ingredients can't be loaded</p> : <Spinner />;\n    if (this.props._ingredients) {\n      burger = (\n        <Aux>\n          <Burger ingredients={this.props._ingredients} />\n          <BuildControls\n            ingredientAdded={this.props.onIngredientAdded}\n            ingredientRemoved={this.props.onIngredientRemoved}\n            disabled={disabledInfo}\n            purchaseable={this.updatePurchaseState(this.props._ingredients)}\n            price={this.props._totalPrice}\n            orderBurger={this.purchaseHandler}\n            isAuth={this.props._isAuthenticated}\n          />\n        </Aux>\n      );\n\n      orderSummary = (\n        <OrderSummary\n          ingredients={this.props._ingredients}\n          purchaseCanceled={this.purchaseCancelHandler}\n          purchaseContinued={this.purchaseContinueHandler}\n          totalPrice={this.props._totalPrice}\n        />\n      );\n    }\n\n    return (\n      <Aux>\n        <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\n          {orderSummary}\n        </Modal>\n        {burger}\n      </Aux>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  _ingredients: state.burgerBuilder.ingredients,\n  _totalPrice: state.burgerBuilder.totalPrice,\n  _error: state.burgerBuilder.error,\n  _isAuthenticated: state.auth.token\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onIngredientAdded: ingName => dispatch(actions.addIngredient(ingName)),\n  onIngredientRemoved: ingName => dispatch(actions.removeIngredient(ingName)),\n  onInitIngredients: () => dispatch(actions.initIngredients()),\n  onInitPurchase: () => dispatch(actions.purchaseInit()),\n  onSetAuthRedirectPath: path => dispatch(actions.setAuthRedirectPath(path))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));\n","import * as actionTypes from './actionTypes';\nimport axios from 'services/axios-orders';\n\nexport const addIngredient = name => ({\n  type: actionTypes.ADD_INGREDIENT,\n  ingredientName: name\n});\n\nexport const removeIngredient = name => ({\n  type: actionTypes.REMOVE_INGREDIENT,\n  ingredientName: name\n});\n\nexport const setIngredients = ingredients => ({\n  type: actionTypes.SET_INGREDIENTS,\n  ingredients\n});\n\nexport const fetchIngredientsFailed = () => ({\n  type: actionTypes.FETCH_INGREDIENTS_FAILED\n});\n\nexport const initIngredients = () => dispatch => {\n  axios\n    .get('/ingredients.json')\n    .then(res => {\n      dispatch(setIngredients(res.data));\n    })\n    .catch(e => {\n      dispatch(fetchIngredientsFailed());\n    });\n};\n","import * as actionTypes from 'store/actions/actionTypes';\nimport axios from 'services/axios-orders';\n\nexport const purchaseBurgerSuccess = (id, orderData) => ({\n  type: actionTypes.PURCHASE_BURGER_SUCCESS,\n  orderId: id,\n  orderData: orderData\n});\n\nexport const purchaseBurgerFailed = error => ({\n  type: actionTypes.PURCHASE_BURGER_FAILED,\n  error\n});\n\nexport const purchaseBurgerStart = () => ({\n  type: actionTypes.PURCHASE_BURGER_START\n});\n\nexport const purchaseBurger = (orderData, token) => dispatch => {\n  dispatch(purchaseBurgerStart());\n  axios\n    .post(`/orders.json?auth=${token}`, orderData)\n    .then(response => {\n      dispatch(purchaseBurgerSuccess(response.data.name, orderData));\n    })\n    .catch(e => {\n      dispatch(purchaseBurgerFailed(e));\n    });\n};\n\nexport const purchaseInit = () => ({\n  type: actionTypes.PURCHASE_INIT\n});\n\nexport const fetchOrdersSuccess = orders => ({\n  type: actionTypes.FETCH_ORDERS_SUCCESS,\n  orders\n});\n\nexport const fetchOrdersFail = error => ({\n  type: actionTypes.FETCH_ORDERS_FAIL,\n  error\n});\n\nexport const fetchOrdersStart = () => ({\n  type: actionTypes.FETCH_ORDERS_START\n});\n\nexport const fetchOrders = (token, userId) => dispatch => {\n  dispatch(fetchOrdersStart());\n  console.log(userId);\n  const queryParams = `?auth=${token}&orderBy=\"userId\"&equalTo=\"${userId}\"`;\n  axios\n    .get(`/orders.json${queryParams}`)\n    .then(res => {\n      const fetchedOrders = [];\n      for (let key in res.data) {\n        fetchedOrders.push({ ...res.data[key], id: key });\n      }\n      dispatch(fetchOrdersSuccess(fetchedOrders));\n    })\n    .catch(e => {\n      dispatch(fetchOrdersFail(e));\n    });\n};\n","import React from 'react';\nimport Burger from 'components/Burger/Burger';\nimport Button from 'components/UI/Button/Button';\nimport styles from './CheckoutSummary.module.css';\n\nconst checkoutSummary = props => {\n  return (\n    <div className={styles.CheckoutSummary}>\n      <h1>We hope it tastes well!</h1>\n      <div\n        style={{\n          width: '100%',\n          margin: 'auto'\n        }}\n      >\n        <Burger ingredients={props.ingredients} />\n      </div>\n      <Button btnType=\"Danger\" clicked={props.checkoutCancelled}>\n        CANCEL\n      </Button>\n      <Button btnType=\"Success\" clicked={props.checkoutContinued}>\n        CONTINUE\n      </Button>\n    </div>\n  );\n};\n\nexport default checkoutSummary;\n","import React from 'react';\nimport styles from './Input.module.css';\n\nconst input = props => {\n  let inputElement = null;\n  const inputStyles = [styles.InputElement];\n\n  if (props.invalid && props.shouldValidate && props.touched) {\n    inputStyles.push(styles.Invalid);\n  }\n  switch (props.elementType) {\n    case 'input':\n      inputElement = (\n        <input\n          className={inputStyles.join(' ')}\n          {...props.elementConfig}\n          value={props.value}\n          onChange={props.changed}\n        />\n      );\n      break;\n    case 'textarea':\n      inputElement = (\n        <textarea\n          className={inputStyles.join(' ')}\n          {...props.elementConfig}\n          value={props.value}\n          onChange={props.changed}\n        />\n      );\n      break;\n    case 'select':\n      inputElement = (\n        <select className={inputStyles.join(' ')} value={props.value} onChange={props.changed}>\n          {props.elementConfig.options.map(option => (\n            <option value={option.value} key={option.value}>\n              {option.displayValue}\n            </option>\n          ))}\n        </select>\n      );\n      break;\n    default:\n      inputElement = (\n        <input\n          className={inputStyles.join(' ')}\n          {...props.elementConfig}\n          value={props.value}\n          onChange={props.changed}\n        />\n      );\n  }\n\n  return (\n    <div className={styles.Input}>\n      <label className={styles.label}>{props.label}</label>\n      {inputElement}\n    </div>\n  );\n};\n\nexport default input;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport withErrorHandler from 'hoc/withErrorHandler/withErrorHandler';\nimport Button from 'components/UI/Button/Button';\nimport styles from './ContactData.module.css';\nimport axios from 'services/axios-orders';\nimport Spinner from 'components/UI/Spinner/Spinner';\nimport Input from 'components/UI/Input/Input';\nimport * as actions from 'store/actions/index.action';\n\nclass ContactData extends Component {\n  state = {\n    orderForm: {\n      name: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'text',\n          placeholder: 'Name'\n        },\n        value: '',\n        validation: {\n          required: true\n        },\n        valid: false,\n        dirty: false\n      },\n      street: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'text',\n          placeholder: 'Street'\n        },\n        value: '',\n        validation: {\n          required: true\n        },\n        valid: false,\n        dirty: false\n      },\n      zip: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'text',\n          placeholder: 'Zipcode'\n        },\n        value: '',\n        validation: {\n          required: true\n        },\n        valid: false,\n        dirty: false\n      },\n      country: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'text',\n          placeholder: 'Country'\n        },\n        value: '',\n        validation: {\n          required: true\n        },\n        valid: false,\n        dirty: false\n      },\n      email: {\n        elementType: 'email',\n        elementConfig: {\n          type: 'text',\n          placeholder: 'Email'\n        },\n        value: '',\n        validation: {\n          required: true\n        },\n        valid: false,\n        dirty: false\n      },\n      deliveryMethod: {\n        elementType: 'select',\n        elementConfig: {\n          options: [\n            { value: 'fastest', displayValue: 'Fastest' },\n            { value: 'cheapest', displayValue: 'Cheapest' }\n          ]\n        },\n        value: 'fastest',\n        validation: {},\n        valid: true\n      }\n    },\n    isFormValid: false,\n    loading: false\n  };\n\n  checkValidity(value, rules) {\n    return rules.required ? value.trim() !== '' : false;\n  }\n\n  orderHandler = event => {\n    event.preventDefault();\n    const formData = {};\n    for (let formElementIdentifier in this.state.orderForm) {\n      formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\n    }\n\n    const order = {\n      ingredients: this.props._ingredients,\n      price: this.props._totalPrice,\n      orderData: formData,\n      userId: this.props._userId\n    };\n\n    this.props.onOrderBurger(order, this.props._authToken);\n  };\n\n  inputChangedHandler = (event, inputIdentifier) => {\n    const updatedOrderForm = {\n      ...this.state.orderForm\n    };\n    const updatedFormElement = { ...updatedOrderForm[inputIdentifier] };\n\n    updatedFormElement.value = event.target.value;\n    updatedFormElement.touched = true;\n    updatedFormElement.valid = this.checkValidity(updatedFormElement.value, updatedFormElement.validation);\n    updatedOrderForm[inputIdentifier] = updatedFormElement;\n\n    let isFormValid = true;\n    for (let inputIdentifier in updatedOrderForm) {\n      isFormValid = updatedOrderForm[inputIdentifier].valid && isFormValid;\n    }\n    this.setState({ orderForm: updatedOrderForm, isFormValid: isFormValid });\n  };\n\n  render() {\n    const formElementsArray = [];\n    for (let key in this.state.orderForm) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.orderForm[key]\n      });\n    }\n    let form = (\n      <form onSubmit={this.orderHandler}>\n        {formElementsArray.map(formElement => (\n          <Input\n            elementType={formElement.config.elementType}\n            elementConfig={formElement.config.elementConfig}\n            value={formElement.config.value}\n            key={formElement.id}\n            touched={formElement.config.touched}\n            invalid={!formElement.config.valid}\n            shouldValidate={formElement.config.validation}\n            changed={event => this.inputChangedHandler(event, formElement.id)}\n          />\n        ))}\n        <Button btnType=\"Success\" disabled={!this.state.isFormValid}>\n          ORDER\n        </Button>\n      </form>\n    );\n\n    if (this.props._loading) {\n      form = <Spinner />;\n    }\n    return (\n      <div className={styles.ContactData}>\n        <h4>Enter your contact data</h4>\n        {form}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  _ingredients: state.burgerBuilder.ingredients,\n  _totalPrice: state.burgerBuilder.totalPrice,\n  _loading: state.order.loading,\n  _authToken: state.auth.token,\n  _userId: state.auth.userId\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onOrderBurger: (orderData, token) => dispatch(actions.purchaseBurger(orderData, token))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(ContactData, axios));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport CheckoutSummary from 'components/Order/CheckoutSummary/CheckoutSummary';\nimport { Route, Redirect } from 'react-router-dom';\nimport ContactData from 'containers/Checkout/ContactData/ContactData';\nclass Checkout extends Component {\n  componentWillMount() {\n    // const query = new URLSearchParams(this.props.location.search);\n    // const ingredients = {};\n    // let price = 0;\n    // for (let param of query.entries()) {\n    //   if (param[0] === 'price') {\n    //     price = param[1];\n    //   } else {\n    //     ingredients[param[0]] = Number(param[1]);\n    //   }\n    // }\n    // this.setState({ ingredients, price: price });\n  }\n\n  checkoutCancelledHandler = () => {\n    this.props.history.goBack();\n  };\n\n  checkoutContinuedHandler = () => {\n    this.props.history.replace('/checkout/contact-data');\n  };\n\n  render() {\n    let summary = <Redirect to=\"/\" />;\n\n    if (this.props._ingredients) {\n      const purchasedRedirect = this.props._purchased ? <Redirect to=\"/\" /> : null;\n      summary = (\n        <div>\n          {purchasedRedirect}\n          <CheckoutSummary\n            ingredients={this.props._ingredients}\n            checkoutCancelled={this.checkoutCancelledHandler}\n            checkoutContinued={this.checkoutContinuedHandler}\n          />\n          <Route path={this.props.match.path + '/contact-data'} component={ContactData} />\n        </div>\n      );\n    }\n\n    return summary;\n  }\n}\n\nconst mapStateToProps = state => ({\n  _ingredients: state.burgerBuilder.ingredients,\n  _totalPrice: state.burgerBuilder.totalPrice,\n  _purchased: state.order.purchased\n});\n\nexport default connect(mapStateToProps)(Checkout);\n","import React from 'react';\nimport styles from './Order.module.css';\n\nconst order = props => {\n  const ingredients = [];\n\n  for (let ingredientName in props.ingredients) {\n    ingredients.push({ name: ingredientName, amount: props.ingredients[ingredientName] });\n  }\n\n  const ingredientOutput = ingredients.map(ig => (\n    <span\n      key={ig.name}\n      style={{\n        textTransform: 'capitalize',\n        display: 'inline-block',\n        margin: '0 8px',\n        border: '1px solid #ccc',\n        padding: '5px'\n      }}\n    >\n      {ig.name} ({ig.amount})\n    </span>\n  ));\n\n  return (\n    <div className={styles.Order}>\n      <p>Ingredients: {ingredientOutput}</p>\n      <p>\n        Price: <strong>{Number(props.price).toFixed(2)}</strong>\n      </p>\n    </div>\n  );\n};\n\nexport default order;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Order from 'components/Order/Order';\nimport axios from 'services/axios-orders';\nimport withErrorHandler from 'hoc/withErrorHandler/withErrorHandler';\nimport * as actions from 'store/actions/index.action';\nimport Spinner from 'components/UI/Spinner/Spinner';\n\nclass Orders extends Component {\n  componentDidMount() {\n    this.props.onFetchOrders(this.props._authToken, this.props._userId);\n  }\n\n  render() {\n    let orders = <Spinner />;\n    if (!this.props._loading) {\n      orders = this.props._orders.map(order => (\n        <Order ingredients={order.ingredients} price={order.price} key={order.id} />\n      ));\n    }\n    return <div>{orders}</div>;\n  }\n}\n\nconst mapStateToProps = state => ({\n  _orders: state.order.orders,\n  _loading: state.order.loading,\n  _authToken: state.auth.token,\n  _userId: state.auth.userId\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onFetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nimport Input from 'components/UI/Input/Input';\nimport Button from 'components/UI/Button/Button';\nimport styles from './Auth.module.css';\nimport Spinner from 'components/UI/Spinner/Spinner';\nimport * as actions from 'store/actions/index.action';\n\nconst mapStateToProps = state => ({\n  _loading: state.auth.loading,\n  _error: state.auth.error,\n  _isAuthenticated: state.auth.token !== null,\n  _buildingBurger: state.burgerBuilder.building,\n  _authRedirectPath: state.auth.authRedirectPath\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onAuth: (email, password, isSignUp) => dispatch(actions.auth(email, password, isSignUp)),\n  onSetAuthRedirect: () => dispatch(actions.setAuthRedirectPath('/'))\n});\n\nclass Auth extends Component {\n  state = {\n    controls: {\n      email: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'email',\n          placeholder: 'Email'\n        },\n        value: '',\n        validation: {\n          required: true,\n          isEmail: true\n        },\n        valid: false,\n        dirty: false\n      },\n      password: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'password',\n          placeholder: 'Password'\n        },\n        value: '',\n        validation: {\n          required: true,\n          minLength: 6\n        },\n        valid: false,\n        dirty: false\n      }\n    },\n    isSignUp: true\n  };\n\n  componentDidMount() {\n    if (this.props._buildingBurger && this.props._authRedirectPath) {\n      this.props.onSetAuthRedirect();\n    }\n  }\n\n  checkValidity(value, rules) {\n    return rules.required ? value.trim() !== '' : false;\n  }\n\n  inputChangedHandler = (event, controlName) => {\n    const updatedControls = {\n      ...this.state.controls,\n      [controlName]: {\n        ...this.state.controls[controlName],\n        value: event.target.value,\n        valid: this.checkValidity(event.target.value, this.state.controls[controlName].validation),\n        touched: true\n      }\n    };\n    this.setState({ controls: updatedControls });\n  };\n\n  onSubmitHandler = event => {\n    event.preventDefault();\n    this.props.onAuth(this.state.controls.email.value, this.state.controls.password.value, this.state.isSignUp);\n  };\n\n  switchAuthModeHandler = event => {\n    event.preventDefault();\n    this.setState(prevState => {\n      return { isSignUp: !prevState.isSignUp };\n    });\n  };\n\n  render() {\n    const formElementsArray = [];\n    for (let key in this.state.controls) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.controls[key]\n      });\n    }\n\n    let form = formElementsArray.map(formElement => (\n      <Input\n        key={formElement.id}\n        elementType={formElement.config.elementType}\n        elementConfig={formElement.config.elementConfig}\n        value={formElement.config.value}\n        touched={formElement.config.touched}\n        invalid={!formElement.config.valid}\n        shouldValidate={formElement.config.validation}\n        changed={event => this.inputChangedHandler(event, formElement.id)}\n      />\n    ));\n\n    if (this.props._loading) {\n      form = <Spinner />;\n    }\n\n    let errorMessage = null;\n    if (this.props._error) {\n      errorMessage = <p>{this.props._error.message}</p>;\n    }\n\n    let authRedirect = null;\n    if (this.props._isAuthenticated) {\n      authRedirect = <Redirect to={this.props._authRedirectPath} />;\n    } else {\n    }\n\n    return (\n      <div className={styles.Auth}>\n        {authRedirect}\n        {errorMessage}\n        <form onSubmit={this.onSubmitHandler}>\n          {form}\n          <Button btnType=\"Success\">{!this.state.isSignUp ? 'Sign in' : 'Sign up'}</Button>\n          <Button btnType=\"Danger\" clicked={this.switchAuthModeHandler}>\n            Switch to {this.state.isSignUp ? 'Sign in' : 'Sign up'}\n          </Button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport * as actions from 'store/actions/index.action';\n\nclass Logout extends Component {\n  componentDidMount() {\n    this.props.onLogout();\n  }\n\n  render() {\n    return <Redirect to=\"/\" />;\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onLogout: () => dispatch(actions.logout())\n});\n\nexport default connect(null, mapDispatchToProps)(Logout);\n","import React, { Component } from 'react';\nimport { Route, withRouter, Redirect, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport * as actions from 'store/actions/index.action';\n\nimport Layout from 'hoc/Layout/Layout';\nimport BurgerBuilder from 'containers/BurgerBuilder/BurgerBuilder';\nimport Checkout from 'containers/Checkout/Checkout';\nimport Orders from 'containers/Orders/Orders';\nimport Auth from 'containers/Auth/Auth';\nimport Logout from 'containers/Auth/Logout/Logout';\nclass App extends Component {\n  componentDidMount() {\n    this.props.onTryAutoSignup();\n  }\n\n  render() {\n    let routes = (\n      <Switch>\n        <Route path=\"/auth\" component={Auth} />\n        <Route path=\"/\" exact component={BurgerBuilder} />\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n\n    if (this.props._isAuthenticated) {\n      routes = (\n        <>\n          <Switch>\n            <Route path=\"/checkout\" component={Checkout} />\n            <Route path=\"/orders\" component={Orders} />\n            <Route path=\"/logout\" component={Logout} />\n            <Route path=\"/auth\" component={Auth} />\n            <Route path=\"/\" exact component={BurgerBuilder} />\n            <Redirect to=\"/\" />\n          </Switch>\n        </>\n      );\n    }\n    return (\n      <div>\n        <Layout>{routes}</Layout>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  _isAuthenticated: state.auth.token !== null\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onTryAutoSignup: () => dispatch(actions.authCheckState())\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const updateObject = (oldObject, updatedProperties) => ({\n  ...oldObject,\n  ...updatedProperties\n});\n","import * as actionTypes from 'store/actions/actionTypes';\nimport { updateObject } from 'services/utils';\n\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nconst initialState = {\n  ingredients: null,\n  totalPrice: 4,\n  error: false,\n  building: false\n};\n\nconst addIngredient = (state, action) => {\n  const updatedState = {\n    ingredients: updateObject(state.ingredients, {\n      [action.ingredientName]: state.ingredients[action.ingredientName] + 1\n    }),\n    totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\n    building: true\n  };\n  return updateObject(state, updatedState);\n};\n\nconst removeIngredient = (state, action) => {\n  const updatedState = {\n    ingredients: updateObject(state.ingredients, {\n      [action.ingredientName]: state.ingredients[action.ingredientName] - 1\n    }),\n    totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\n    building: true\n  };\n  return updateObject(state, updatedState);\n};\n\nconst setIngredients = (state, action) =>\n  updateObject(state, { ingredients: action.ingredients, totalPrice: 4, error: false, building: false });\n\nconst fetchIngredientsFailed = (state, action) => updateObject(state, { error: true });\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_INGREDIENT:\n      return addIngredient(state, action);\n\n    case actionTypes.REMOVE_INGREDIENT:\n      return removeIngredient(state, action);\n\n    case actionTypes.SET_INGREDIENTS:\n      return setIngredients(state, action);\n\n    case actionTypes.FETCH_INGREDIENTS_FAILED:\n      return fetchIngredientsFailed(state);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import * as actionTypes from 'store/actions/actionTypes';\nimport { updateObject } from 'services/utils';\n\nconst initialState = {\n  orders: [],\n  loading: false,\n  purchased: false\n};\n\nconst purchaseInit = (state, action) => updateObject(state, { purchased: false });\n\nconst purcharseBurgerStart = (state, action) => updateObject(state, { loading: true });\n\nconst purcharseBurgerSuccess = (state, action) => {\n  const newOrder = updateObject(action.orderData, { id: action.orderId });\n  return updateObject(state, { loading: false, purchased: true, orders: state.orders.concat(newOrder) });\n};\n\nconst purcharseBurgerFailed = (state, action) => updateObject(state, { loading: false });\n\nconst fetchOrdersStart = (state, action) => updateObject(state, { loading: true });\n\nconst fetchOrdersSuccess = (state, action) => updateObject(state, { loading: false, orders: action.orders });\n\nconst fetchOrdersFail = (state, action) => updateObject(state, { loading: false });\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.PURCHASE_INIT:\n      return purchaseInit(state, action);\n\n    case actionTypes.PURCHASE_BURGER_START:\n      return purcharseBurgerStart(state, action);\n\n    case actionTypes.PURCHASE_BURGER_SUCCESS:\n      return purcharseBurgerSuccess(state, action);\n\n    case actionTypes.PURCHASE_BURGER_FAILED:\n      return purcharseBurgerFailed(state, action);\n\n    case actionTypes.FETCH_ORDERS_START:\n      return fetchOrdersStart(state, action);\n\n    case actionTypes.FETCH_ORDERS_SUCCESS:\n      return fetchOrdersSuccess(state, action);\n\n    case actionTypes.FETCH_ORDERS_FAIL:\n      return fetchOrdersFail(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import * as actionTypes from 'store/actions/actionTypes';\nimport { updateObject } from 'services/utils';\n\nconst initialState = {\n  token: null,\n  userId: null,\n  error: null,\n  loading: false,\n  authRedirectPath: '/'\n};\n\nconst authStart = (state, action) => updateObject(state, { error: null, loading: true });\n\nconst authSuccess = (state, action) =>\n  updateObject(state, { loading: false, error: null, token: action.idToken, userId: action.userId });\n\nconst authFail = (state, action) => updateObject(state, { error: action.error, loading: false });\n\nconst setAuthRedirectPath = (state, action) => updateObject(state, { authRedirectPath: action.path });\n\nconst authLogout = (state, action) => updateObject(state, { token: null, userId: null });\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.AUTH_START:\n      return authStart(state, action);\n\n    case actionTypes.AUTH_SUCCESS:\n      return authSuccess(state, action);\n\n    case actionTypes.AUTH_FAIL:\n      return authFail(state, action);\n\n    case actionTypes.AUTH_LOGOUT:\n      return authLogout(state, action);\n\n    case actionTypes.SET_AUTH_REDIRECT_PATH:\n      return setAuthRedirectPath(state, action);\n\n    default:\n      return state;\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport burgerBuilderReducer from 'store/reducers/burgerBuilder.reducer';\nimport orderReducer from 'store/reducers/order.reducer';\nimport authReducer from 'store/reducers/auth.reducer';\n\nconst composeEnhancers =\n  process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose;\nconst rootReducer = combineReducers({\n  burgerBuilder: burgerBuilderReducer,\n  order: orderReducer,\n  auth: authReducer\n});\n\nconsole.log(process.env.NODE_ENV);\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}